From ef15dae1308eeff02cc5a09dfff0c0f4312b6819 Mon Sep 17 00:00:00 2001
From: dengkx <1498971779@qq.com>
Date: Mon, 21 Jun 2021 15:22:09 +0800
Subject: [PATCH] RK3399: add roc-pc-plus

---
 arch/arm64/boot/dts/rockchip/Makefile         |   1 +
 .../boot/dts/rockchip/rk3399-roc-pc-plus.dts  | 319 ++++++++++++++++++
 sound/soc/codecs/es8328.c                     | 111 ++++++
 3 files changed, 431 insertions(+)
 create mode 100644 arch/arm64/boot/dts/rockchip/rk3399-roc-pc-plus.dts

diff --git a/arch/arm64/boot/dts/rockchip/Makefile b/arch/arm64/boot/dts/rockchip/Makefile
index 26661c7b736b..102539d3a112 100644
--- a/arch/arm64/boot/dts/rockchip/Makefile
+++ b/arch/arm64/boot/dts/rockchip/Makefile
@@ -35,6 +35,7 @@ dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3399-pinebook-pro.dtb
 dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3399-puma-haikou.dtb
 dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3399-roc-pc.dtb
 dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3399-roc-pc-mezzanine.dtb
+dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3399-roc-pc-plus.dtb
 dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3399-rock-pi-4a.dtb
 dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3399-rock-pi-4b.dtb
 dtb-$(CONFIG_ARCH_ROCKCHIP) += rk3399-rock-pi-4c.dtb
diff --git a/arch/arm64/boot/dts/rockchip/rk3399-roc-pc-plus.dts b/arch/arm64/boot/dts/rockchip/rk3399-roc-pc-plus.dts
new file mode 100644
index 000000000000..174e0656e260
--- /dev/null
+++ b/arch/arm64/boot/dts/rockchip/rk3399-roc-pc-plus.dts
@@ -0,0 +1,319 @@
+/dts-v1/;
+#include "rk3399-roc-pc.dtsi"
+
+/ {
+	model = "Firefly roc-rk3399-pc PLUS";
+	compatible = "firefly,roc-rk3399-pc", "rockchip,rk3399";
+
+	poe_12v: poe-12v {
+		compatible = "regulator-fixed";
+		regulator-name = "poe_12v";
+		regulator-always-on;
+		regulator-boot-on;
+		regulator-min-microvolt = <12000000>;
+		regulator-max-microvolt = <12000000>;
+	};
+
+	vcc3v3_ngff: vcc3v3-ngff {
+		compatible = "regulator-fixed";
+		regulator-name = "vcc3v3_ngff";
+		enable-active-high;
+		gpio = <&gpio4 RK_PD3 GPIO_ACTIVE_HIGH>;
+		pinctrl-names = "default";
+		pinctrl-0 = <&vcc3v3_ngff_en>;
+		regulator-always-on;
+		regulator-boot-on;
+		regulator-min-microvolt = <3300000>;
+		regulator-max-microvolt = <3300000>;
+		vin-supply = <&sys_12v>;
+	};
+
+	vcc3v3_pcie: vcc3v3-pcie {
+		compatible = "regulator-fixed";
+		regulator-name = "vcc3v3_pcie";
+		enable-active-high;
+		gpio = <&gpio1 RK_PC1 GPIO_ACTIVE_HIGH>;
+		pinctrl-names = "default";
+		pinctrl-0 = <&vcc3v3_pcie_en>;
+		regulator-min-microvolt = <3300000>;
+		regulator-max-microvolt = <3300000>;
+		vin-supply = <&sys_12v>;
+	};
+
+	vcc_wifi: vcc-wifi {
+		status = "okay";
+		compatible = "regulator-fixed";
+		regulator-name = "vcc_wifi";
+		enable-active-high;
+		gpio = <&gpio2 4 GPIO_ACTIVE_HIGH>;
+		pinctrl-names = "default";
+		pinctrl-0 = <&vcc_wifi_h>;
+		regulator-always-on;
+		regulator-boot-on;
+		regulator-min-microvolt = <5000000>;
+		regulator-max-microvolt = <5000000>;
+	};
+
+	wireless_wlan: wireless-wlan {
+		compatible = "wlan-platdata";
+		rockchip,grf = <&grf>;
+		wifi_chip_type = "ap6354";
+		sdio_vref = <1800>;
+		WIFI,host_wake_irq = <&gpio0 3 GPIO_ACTIVE_HIGH>; /* GPIO0_a3 */
+		status = "disabled";
+	};
+
+	wireless_bluetooth: wireless-bluetooth {
+		compatible = "bluetooth-platdata";
+		//wifi-bt-power-toggle;
+		clocks = <&rk808 1>;
+		clock-name = "ext_clock";
+		uart_rts_gpios = <&gpio2 19 GPIO_ACTIVE_LOW>; /* GPIO2_C3 */
+		pinctrl-names = "default", "rts_gpio";
+		pinctrl-0 = <&uart0_rts>;
+		pinctrl-1 = <&uart0_gpios>;
+		//BT,power_gpio  = <&gpio3 19 GPIO_ACTIVE_HIGH>; /* GPIOx_xx */
+		BT,reset_gpio    = <&gpio0 9 GPIO_ACTIVE_HIGH>; /* GPIO0_B1 */
+		BT,wake_gpio     = <&gpio2 26 GPIO_ACTIVE_HIGH>; /* GPIO2_D2 */
+		BT,wake_host_irq = <&gpio0 4 GPIO_ACTIVE_HIGH>; /* GPIO0_A4 */
+		status = "disabled";
+	};
+
+	es8388-sound {
+		status = "okay";
+		compatible = "simple-audio-card";
+		simple-audio-card,format = "i2s";
+		simple-audio-card,name = "rockchip,es8388-codec";
+		simple-audio-card,mclk-fs = <256>;
+		simple-audio-card,cpu {
+			sound-dai = <&i2s1>;
+			system-clock-frequency = <11289600>;
+		};
+		simple-audio-card,codec {
+			sound-dai = <&es8388>;
+			system-clock-frequency = <11289600>;
+		};
+	};
+	/delete-node/ vcc_hub_en-regulator;
+
+	leds {
+		compatible = "gpio-leds";
+
+		FAN_EN {
+			//fan power
+			gpios = <&gpio1 1 GPIO_ACTIVE_HIGH>;	//GPIO1_A1
+			default-state = "on";
+		};
+	};
+	ir-receiver {
+		compatible = "gpio-ir-receiver";
+		gpios = <&gpio0 RK_PA6 GPIO_ACTIVE_LOW>;
+               linux,rc-map-name = "rc-khadas";
+		pinctrl-names = "default";
+		pinctrl-0 = <&ir_int>;
+	};
+};
+
+&sys_12v {
+	vin-supply = <&poe_12v>;
+};
+
+&pcie_phy {
+	status = "okay";
+};
+
+&pcie0 {
+	ep-gpios = <&gpio4 RK_PD1 GPIO_ACTIVE_HIGH>;
+	num-lanes = <4>;
+	pinctrl-names = "default";
+	pinctrl-0 = <&pcie_perst>;
+	vpcie3v3-supply = <&vcc3v3_pcie>;
+	vpcie1v8-supply = <&vcc1v8_pmu>;
+	vpcie0v9-supply = <&vcca_0v9>;
+	status = "okay";
+};
+
+
+/* RTC */
+
+&rk808{
+	rtc {
+		status = "disabled";
+	};
+};
+
+&i2c0 {
+	status = "okay";
+	hym8563: hym8563@51 {
+		compatible = "haoyu,hym8563";
+		reg = <0x51>;
+		interrupt-parent = <&gpio0>;
+		interrupts = <5 IRQ_TYPE_EDGE_FALLING>;
+		pinctrl-names = "default";
+		#clock-cells = <0>;
+		clock-frequency = <32768>;
+		clock-output-names = "xin32k";
+	};
+};
+
+
+&i2c4 {
+	/delete-node/ fusb30x@22;
+};
+
+&fusb0 {
+	fusb302,role = "ROLE_MODE_DFP";
+	vbus-5v-gpios = <&gpio1 13 GPIO_ACTIVE_HIGH>;
+};
+
+&cdn_dp {
+	status = "okay";
+	extcon = <&fusb0>;
+	phys = <&tcphy0_dp>;
+};
+
+&tcphy1 {
+	/delete-property/ extcon;
+};
+
+&u2phy1 {
+	/delete-property/ extcon;
+};
+
+&usbdrd3_1 {
+	/delete-property/ extcon;
+};
+
+&i2s1 {
+	status = "okay";
+};
+
+
+&rk808 {
+	/delete-property/ pmic,hold-gpio;
+};
+
+&yellow_led{
+	gpios = <&gpio0 13 GPIO_ACTIVE_HIGH>;
+};
+&vcc_sys {
+	/delete-property/ gpio;
+	/delete-property/ pinctrl-names;
+	/delete-property/ pinctrl-0;
+};
+
+&i2c1 {
+	status = "okay";
+	es8388: es8388@11 {
+		compatible = "everest,es8388";
+		status = "okay";
+		reg = <0x11>;
+		hp-det-gpio = <&gpio2 6 GPIO_ACTIVE_HIGH>;
+		hp-ctl-gpio = <&gpio0 2 GPIO_ACTIVE_HIGH>;
+		clock-names = "mclk";
+		clocks = <&cru SCLK_I2S_8CH_OUT>;
+		pinctrl-names = "default";
+		pinctrl-0 = <&i2s_8ch_mclk>;
+		pinctrl-1 = <&ear_ctl_h>;
+		#sound-dai-cells = <0>;
+	};
+};
+
+
+&pinctrl {
+    ngff {
+		vcc3v3_ngff_en: vcc3v3-ngff-en {
+			rockchip,pins = <4 RK_PD3 RK_FUNC_GPIO &pcfg_pull_none>;
+		};
+	};
+
+	pcie {
+		vcc3v3_pcie_en: vcc3v3-pcie-en {
+			rockchip,pins = <1 RK_PC1 RK_FUNC_GPIO &pcfg_pull_none>;
+		};
+
+		pcie_perst: pcie-perst {
+			rockchip,pins = <4 RK_PD1 RK_FUNC_GPIO &pcfg_pull_none>;
+		};
+	};
+
+	wireless-bluetooth {
+		uart0_gpios: uart0-gpios {
+			rockchip,pins =
+				<2 19 RK_FUNC_GPIO &pcfg_pull_none>;
+		};
+	};
+	wifi {
+		vcc_wifi_h: vcc-wifi-h {
+			rockchip,pins = <2 4 RK_FUNC_GPIO &pcfg_pull_none>;
+		};
+	};
+
+
+	es8388-pins {
+		ear_ctl_h: ear-ctl-h {
+			rockchip,pins = <0 2 RK_FUNC_GPIO &pcfg_pull_down>;
+		};
+	};
+
+	i2s0 {
+		i2s0_8ch_bus: i2s0-8ch-bus {
+			rockchip,pins =
+				<3 RK_PD0 1 &pcfg_pull_none>,
+				<3 RK_PD1 1 &pcfg_pull_none>,
+				<3 RK_PD2 1 &pcfg_pull_none>,
+				<3 RK_PD3 1 &pcfg_pull_none>,
+				<3 RK_PD4 1 &pcfg_pull_none>,
+				<3 RK_PD5 1 &pcfg_pull_none>,
+				<3 RK_PD6 1 &pcfg_pull_none>,
+				<3 RK_PD7 1 &pcfg_pull_none>;
+		};
+
+		i2s_8ch_mclk: i2s-8ch-mclk {
+			rockchip,pins = <4 0 1 &pcfg_pull_none>;
+		};
+	};
+
+	leds {
+		yellow_led_pin: yellow-led-pin {
+			rockchip,pins = <0 13 RK_FUNC_GPIO &pcfg_pull_none>;
+		};
+	};
+
+	ir {
+		ir_int: ir-int {
+			rockchip,pins = <0 RK_PA6 RK_FUNC_GPIO &pcfg_pull_none>;
+		};
+	};
+};
+
+&sdio0 {
+	bus-width = <4>;
+	cap-sd-highspeed;
+	cap-sdio-irq;
+	keep-power-in-suspend;
+	mmc-pwrseq = <&sdio_pwrseq>;
+	non-removable;
+	pinctrl-names = "default";
+	pinctrl-0 = <&sdio0_bus4 &sdio0_cmd &sdio0_clk>;
+	sd-uhs-sdr104;
+	vmmc-supply = <&vcc3v3_ngff>;
+	vqmmc-supply = <&vcc_1v8>;
+	status = "okay";
+};
+
+&uart0 {
+	pinctrl-names = "default";
+	pinctrl-0 = <&uart0_xfer &uart0_cts &uart0_rts>;
+	status = "okay";
+};
+
+/*
+&fusb0 {
+	status = "disabled";
+};
+
+
+&fusb1 {
+	status = "disabled";
+};
+*/
diff --git a/sound/soc/codecs/es8328.c b/sound/soc/codecs/es8328.c
index 7e26231a596a..2373b39cc572 100644
--- a/sound/soc/codecs/es8328.c
+++ b/sound/soc/codecs/es8328.c
@@ -21,8 +21,13 @@
 #include <sound/pcm_params.h>
 #include <sound/soc.h>
 #include <sound/tlv.h>
+#include <linux/of_gpio.h>
+#include <linux/gpio.h>
 #include "es8328.h"

+#define INVALID_GPIO		   -1
+#define ES8328_CODEC_SET_HP		1
+
 static const unsigned int rates_12288[] = {
 	8000, 12000, 16000, 24000, 32000, 48000, 96000,
 };
@@ -86,8 +91,18 @@ struct es8328_priv {
 	const int *mclk_ratios;
 	bool master;
 	struct regulator_bulk_data supplies[ES8328_SUPPLY_NUM];
+
+	int hp_ctl_gpio;
+	int hp_det_gpio;
+
+	bool muted;
+	bool hp_inserted;
+	bool hp_gpio_level;
+	bool hp_det_level;
 };

+static struct es8328_priv *es8328_private;
+
 /*
  * ES8328 Controls
  */
@@ -112,6 +127,40 @@ static const struct {
 	{ 48000, ES8328_DACCONTROL6_DEEMPH_48k },
 };

+static int es8328_set_gpio(int gpio, bool level)
+{
+	struct es8328_priv *es8328 = es8328_private;
+
+	if (!es8328)
+	return 0;
+
+	if ((gpio & ES8328_CODEC_SET_HP) && es8328
+	    && es8328->hp_ctl_gpio != INVALID_GPIO) {
+		gpio_set_value(es8328->hp_ctl_gpio, level);
+	}
+
+	return 0;
+}
+
+static irqreturn_t hp_det_irq_handler(int irq, void *dev_id)
+{
+	struct es8328_priv *es8328 = es8328_private;
+
+	if (gpio_get_value(es8328->hp_det_gpio))
+		es8328->hp_inserted = 1;
+	else
+		es8328->hp_inserted = 0;
+
+	if (!es8328->muted && es8328->hp_inserted)
+		es8328_set_gpio(ES8328_CODEC_SET_HP, es8328->hp_gpio_level);
+	else
+		es8328_set_gpio(ES8328_CODEC_SET_HP, !es8328->hp_gpio_level);
+
+	return IRQ_HANDLED;
+}
+
+
 static int es8328_set_deemph(struct snd_soc_component *component)
 {
 	struct es8328_priv *es8328 = snd_soc_component_get_drvdata(component);
@@ -451,6 +500,13 @@ static const struct snd_soc_dapm_route es8328_dapm_routes[] = {

 static int es8328_mute(struct snd_soc_dai *dai, int mute, int direction)
 {
+	struct es8328_priv *es8328 = snd_soc_component_get_drvdata(dai->component);
+	es8328->muted = mute;
+	if (!mute && es8328->hp_inserted)
+		es8328_set_gpio(ES8328_CODEC_SET_HP, es8328->hp_gpio_level);
+	else
+		es8328_set_gpio(ES8328_CODEC_SET_HP, !es8328->hp_gpio_level);
+
 	return snd_soc_component_update_bits(dai->component, ES8328_DACCONTROL3,
 			ES8328_DACCONTROL3_DACMUTE,
 			mute ? ES8328_DACCONTROL3_DACMUTE : 0);
@@ -795,6 +851,21 @@ static int es8328_component_probe(struct snd_soc_component *component)
 		goto clk_fail;
 	}

+	if (es8328->hp_det_gpio != INVALID_GPIO) {
+		if (gpio_get_value(es8328->hp_det_gpio) == es8328->hp_det_level)
+			es8328->hp_inserted = 1;
+	} else {
+		es8328->hp_inserted = 1;
+	}
+
+
+	if (!strncmp(component->dev->of_node->name, "es8388", 6)) {
+		usleep_range(18000, 20000);
+		snd_soc_component_update_bits(component, ES8328_DACCONTROL17,
+			ES8328_DACCONTROL17_LD2LO, ES8328_DACCONTROL17_LD2LO);
+		snd_soc_component_update_bits(component, ES8328_DACCONTROL20,
+			ES8328_DACCONTROL20_RD2RO, ES8328_DACCONTROL20_RD2RO);
+	}
 	return 0;

 clk_fail:
@@ -850,6 +921,8 @@ int es8328_probe(struct device *dev, struct regmap *regmap)
 	struct es8328_priv *es8328;
 	int ret;
 	int i;
+	int hp_irq = 0;
+	enum of_gpio_flags flags;

 	if (IS_ERR(regmap))
 		return PTR_ERR(regmap);
@@ -859,6 +932,7 @@ int es8328_probe(struct device *dev, struct regmap *regmap)
 		return -ENOMEM;

 	es8328->regmap = regmap;
+	es8328_private = es8328;

 	for (i = 0; i < ARRAY_SIZE(es8328->supplies); i++)
 		es8328->supplies[i].supply = supply_names[i];
@@ -870,6 +944,43 @@ int es8328_probe(struct device *dev, struct regmap *regmap)
 		return ret;
 	}

+	es8328->hp_ctl_gpio = of_get_named_gpio_flags(dev->of_node, "hp-ctl-gpio", 0, &flags);
+	if (es8328->hp_ctl_gpio < 0) {
+		dev_info(dev, "Can not read property hp_ctl_gpio\n");
+		es8328->hp_ctl_gpio = INVALID_GPIO;
+	} else {
+		es8328->hp_gpio_level = (flags & OF_GPIO_ACTIVE_LOW) ? 0 : 1;
+		ret = devm_gpio_request_one(dev, es8328->hp_ctl_gpio, GPIOF_DIR_OUT, "hp_ctl_gpio");
+		if (ret != 0) {
+			dev_err(dev, "Failed to request hp_ctl_gpio\n");
+			return ret;
+		}
+		es8328_set_gpio(ES8328_CODEC_SET_HP, !es8328->hp_gpio_level);
+	}
+
+	es8328->hp_det_gpio = of_get_named_gpio_flags(dev->of_node, "hp-det-gpio", 0, &flags);
+	if (es8328->hp_det_gpio < 0) {
+		dev_info(dev, "Can not read property hp_det_gpio\n");
+		es8328->hp_det_gpio = INVALID_GPIO;
+	} else {
+		es8328->hp_det_level = (flags & OF_GPIO_ACTIVE_LOW) ? 0 : 1;
+		ret = devm_gpio_request_one(dev, es8328->hp_det_gpio, GPIOF_IN, NULL);
+		if (ret != 0) {
+			dev_err(dev, "Failed to request hp_det_gpio\n");
+			return ret;
+		}
+		hp_irq = gpio_to_irq(es8328->hp_det_gpio);
+
+		if (hp_irq) {
+			ret = devm_request_threaded_irq(dev, hp_irq, NULL, hp_det_irq_handler,
+					IRQ_TYPE_EDGE_BOTH | IRQF_ONESHOT, dev->of_node->name, NULL);
+			if (ret < 0) {
+				dev_err(dev, "request_irq failed: %d\n", ret);
+				return ret;
+			}
+		}
+	}
+
 	dev_set_drvdata(dev, es8328);

 	return devm_snd_soc_register_component(dev,
--
2.20.1

